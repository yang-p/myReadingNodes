vue的指令被当做html元素的属性
注意点：{{}}的写法，放在html元素的属性中是无效的，因此只有用指令才能操作html元素的属性。

v-text = '';	给目标元素添加一段文本，不论是什么文本都只是字符串。
v-html = '';	和v-text类似，但是如果文本里面有html代码，那么会被浏览器渲染(不推荐使用该指令)

v-on:[事件类型] = '属性值';


v-bind:[属性] = '属性值';
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
v-model = '';
				注意点：
						1、用中文输入法输入汉字，但是还没选定词组前，Vue不会更新数据，要想在还没选定词组前就更新数据，那么使用@input代替v-model
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
v-if = '';
v-else-if = '';
v-else;		
v-show = ''; v-show = 'false';不显示 	v-show = 'true';显示	
			注意点：
					1、v-else-if必须紧跟v-if,v-else必须紧跟v-else-if或v-if
					2、当一次性判断多个元素时，将这些元素放在vue内置的template元素上面，然后在template元素上使用条件指令，
						而template元素并不会被渲染出来。
					3、vue默认从效率出发，会复用一些组件，比如v-if和v-else里面的元素有相同的，当从一个条件切换到另一个条件时，
						那么vue就会复用上一个条件的元素。
						如果不想让元素进行复用，那么就给该元素添加key属性。

——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————					
v-for = '';	
			v-for指令也可以用在内置标签template上，从而渲染多个元素
			v-for指令可以迭代整数，比如整数10，迭代后就是1到10之间的整数


————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————			

v-once		没有属性值，目标元素及其子元素的内容只渲染一次，当vue实例的数据发生改变时，目标元素的内容并不会重新渲染。

v-cloak		没有属性值
			由于Vue在编译代码时，也需要时间，所以页面上可能会出现未渲染的数据，给用户
			很不好的体验，所以v-cloak属性在为编译完时，会存在元素上，当该元素编译完成后，v-cloak会被去除。
			v-cloak应该配合css使用，[v-cloak]{dispaly:none};
			注意点：
					单页面应用，由于是路由控制不同组件的挂载，所有不需要用到v-cloak

v-pre		没有属性值,对该元素及其子元素不进行编译