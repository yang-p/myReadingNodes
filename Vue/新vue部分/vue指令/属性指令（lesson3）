前面已经说过属性的属性值，不能用插值的写法，而是需要用指令的形式。
	
	<span class='red'></span>

	要想让class的值是可变的，那么需要用到v-bind指令，v-bind:可以简写成:

	<span v-bind:class='red'></span> <===> <span :class='red'></span>




v-bind所绑定的属性，的属性值写法：
				1、可以是data对象中的属性名；<div v-bind='obj'></div>
				2、可以是对象(json)格式；	<div v-bind='{key:"value"}'></div>
				3、可以是数组格式;			<div v-bind='[arr1,arr2]'></div>

v-bind所绑定的属性，如果是对象类型，将该对象里面的所有属性都绑定在目标元素上
				<div v-bind='object'></div>

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

v-model: 视图上的值改变时，data中的值也会同时变化（双向数据绑定）

		 注意点：只适用于input和textarea元素
		 v-model在input/textarea、select标签上各自的作用：
		 									1、type='text'：v-model相当于value属性,同时忽略input标签的value属性
											2、 textarea： v-model也是相当于value属性，忽略textarea标签中间的文本
											3、多个单选按钮：	v-model同时指向同一个数据，当v-model所指向的数据与某个单选按钮的value值相等时，该单选按钮被选中。
																并且被选中的按钮的value值会传给v-model所依赖的值。
											4、多个复选框：	v-model同时2指向同一个数据，并且该数据为数组，当数组中的某个元素和某个复选按钮的value值相等时，该复选框被选中，
															并且当选中某个复选框按钮时，该复选框的value值会被push到该数组中，取消选中时，从该数组中删除所对应的value的值

											5、下拉框选中单个值：	v-model设置在select标签上，v-model所指向的值是一个字符串，v-model会去和option中的value属性进行匹配，
																	如果option中没有设置value属性，那么匹配option中的文本。
											5、下拉框选中多个值：  给select标签添加multiple属性，v-model所指向的数据是一个数组。

		v-model的修饰符：
						.lazy 	v-model默认是input事件触发后，添加该修饰符是change事件触发后,即在失焦或按回车键后才更新
						.number 将输入的数据类型转换成数字类型
						.trim  自动过滤输入的内容的首尾空格

————————————————————————————————————————————————————————————————————————————————————————

class属性：
			第一种：
					<div :class='类名'></div>

			第二种：
					<div :class='[类名1,类名2，类名3]'></div>
					一般情况下，该数组是放在data里面的,通过数组方法操作该数组筛选出想要的选择器。

			第三种：
					<div :class='{类名1:true, 类名2:false,类名3:true}'></div>

					选择器的属性值为true或false，表示该选择器是否有效，为true表示有效。

			第四种：
					条件写法：
							1、通过计算属性处理条件
							2、通过三元运算符直接在:class的值判断

			第五种:
					在数组中的元素写对象形式

style属性：
			和class属性用法差不多
			注意点：
					1、css属性名用小驼峰命名或原生的css属性名，比如fontSize、font-size
					2、vue.js会自动给特殊的css属性名称增加前缀，比如transform
