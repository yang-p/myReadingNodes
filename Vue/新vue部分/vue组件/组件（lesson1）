所有vue组件都是Vue实例

组件的三大核心就是：props传递数据、event监听事件、slot分发内容
——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
组件需要注册后才能使用，而注册分为全局注册和局部注册：
	全局组件：
			Vue.component('组件名',{template:`html元素`})

	局部组件：
			写法一：
				new Vue({
					el:'#app',
					components:{
					'组件名':{
								data(){
									return {
										msg:'yang'
									}
								},
								template:'html元素'
							}
						}
					})				

			写法二：
			<template id='aaa'>
				<div>//作为根标签包裹住其内部标签

				</div>
			</template>
				new Vue({
					el:'#app',
					components:{
					'组件名':{
								data(){
									return {
										msg:'yang'
									}
								},
								template:'#aaa'
							}
						}
					})

			注意点：
					1、局部组件只能拿到自身实例对象的data里面的数据。
					2、Vue组件在有些情况下受到html标签的影响，比如table标签里面只能是一些表格标签，因此无法使用组件。
						解决办法是通过is属性挂载组件
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
组件的属性：
			template属性：  属性值为字符串形式的html元素
			data属性：		该属性必须是函数形式
						注意点：
								如果return出的对象是外部的一个对象，那么这个对象就是共享的，任何一方修改都会同步，所以要想不让他们同步只能是自己返回一个对象。
			methods属性
			computed属性

				is属性：	解决浏览器解析DOM模板限制性的问题，is属性是作为某个标签的属性，属性值是要挂载的组件，；浏览器解析后该标签就被挂载的组件中的标签所替换。
